name: Deploy Next.js application
on:
  push:
    branches:
      - main
      - master
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: shanealexander09/pso-chat-docker:latest
  tests:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 20.9.0
      - name: install jest dll
        run: npm install
      - name: Run tests
        run:
          npm test
          ##deploy dockerhub

  deploy:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.8.5
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: AKIA2UC3CNSNSB2XARUB
          aws-secret-access-key: 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
          aws-region: ap-southeast-2
      - name: Initialize Terraform
        id: init
        run: terraform init
      - name: Terraform Plan
        id: plan
        run: terraform plan -out=plan.out
      - name: Terraform Apply
        run: terraform apply plan.out

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Get Instance IP
        id: instance_ip
        run: |
          terraform show -json > terraform.json
          INSTANCE_IP=$(jq -r '.values.outputs.instance_ip.value' terraform.json)
          echo "::set-output name=instance_ip::$INSTANCE_IP"
          rm terraform.json

      - name: Debug Instance IP
        run: echo "Instance IP is ${{ steps.instance_ip.outputs.instance_ip }}"

      - name: Deploy Docker Container
        env:
          INSTANCE_IP: ${{ steps.instance_ip.outputs.instance_ip }}
        run: |
          echo "Deploying Docker container to $INSTANCE_IP:3000"
          ssh -o StrictHostKeyChecking=no ec2-user@$INSTANCE_IP '
            docker pull shanealexander09/pso-chat-docker:latest
            docker stop pso-chat-container || true
            docker rm pso-chat-container || true
            docker run -d -p 3000:3000 --name pso-chat-container shanealexander09/pso-chat-docker:latest
          '
